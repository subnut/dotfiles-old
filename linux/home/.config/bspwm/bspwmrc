#! /bin/sh

killall -q sxhkd
sxhkd &

if ! [[ `bspc query --desktops --names` =~ "Desktop" ]]; then for MONITOR in $(bspc query -M --names); do bspc monitor $MONITOR -d $(bspc query -D --names -m $MONITOR);done; 
#else bspc monitor -d I II III IV V VI VII VIII IX T XI XII XIII XIV XV XVI XVII XVIII XIX XX XXI XXII; fi
else for MONITOR in $(bspc query -M --names); do bspc monitor $MONITOR -d "$MONITOR"_I  ; for x in II III IV V VI VII VIII IX T XI XII XIII XIV XV XVI XVII XVIII XIX XX XXI XXII; do bspc monitor $MONITOR -a "$MONITOR"_$x; done;done; fi

bspc config border_width         0
bspc config window_gap          10

bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true

bspc config focus_follows_pointer true
bspc config pointer_follows_monitor true

bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a Chromium desktop='^2'
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off

bspc rule -a VirtualBoxVM state=floating
bspc rule -a jome state=floating
bspc rule -a xdman-Main state=floating
bspc rule -a my_zoom state=floating
xsetroot -cursor_name left_ptr

safeeyes -e &
#if [[ $((10#$(date +'%H'))) -gt 5 && $((10#$(date +'%H'))) -lt 18 ]] ; then feh --bg-fill light.png; else feh --bg-fill dark.png; fi
feh --bg-fill light.png

if killall -q polybar; then true; else bspc config top_padding $((`bspc config bottom_padding` + 35)); fi
# polybar mybar &
zsh <<< "polybar --list-monitors | cut -d':' -f1 | while IFS= read -r MONITOR; do if ! [[ \$MONITOR == 'eDP' ]]; then MONITOR=\$MONITOR polybar secondary &> /dev/null &; else polybar mybar &> /dev/null &; fi; done &"

killall -q picom
exec picom 
#exec picom -f --inactive-dim 0.3 --corner-radius 35 --vsync --backend glx --glx-no-stencil --fade-delta 1 --detect-rounded-corners --shadow-opacity=1 --blur-background --blur-method dual_kawase --blur-strength 10 & 
#exec picom  --inactive-dim 0.3 --corner-radius 35 --vsync --backend glx --glx-no-stencil --detect-rounded-corners --shadow-opacity=1 --blur-background --blur-method dual_kawase --blur-strength 10 & 
